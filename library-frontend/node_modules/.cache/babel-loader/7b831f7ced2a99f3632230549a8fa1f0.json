{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { useQuery, useMutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst ALL_AUTHORS = gql`\n{\n  allAuthors{\n    name\n    born\n    bookCount\n  }\n}\n`;\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  const authors = useQuery(ALL_AUTHORS);\n\n  const handleError = error => {\n    setErrorMessage(error.graphQLErrors[0].message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"add book\")), React.createElement(Authors, {\n    authors: authors,\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","useQuery","useMutation","gql","ALL_AUTHORS","App","page","setPage","errorMessage","setErrorMessage","authors","handleError","error","graphQLErrors","message","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;CAAxB;;AAUA,MAAME,GAAG,GAAG,MAAM;AAAA,oBACQR,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,QACTS,IADS;AAAA,QACHC,OADG;;AAAA,qBAEwBV,QAAQ,CAAC,IAAD,CAFhC;AAAA;AAAA,QAETW,YAFS;AAAA,QAEKC,eAFL;;AAGhB,QAAMC,OAAO,GAAGT,QAAQ,CAACG,WAAD,CAAxB;;AAEA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,eAAe,CAACG,KAAK,CAACC,aAAN,CAAoB,CAApB,EAAuBC,OAAxB,CAAf;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFS,EAEP,KAFO,CAAV;AAGD,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,EAOE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAIG,OADb;AAEE,IAAA,IAAI,EAAEJ,IAAI,KAAK,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAgBE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEA,IAAI,KAAK,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAuBD,CAnCD;;AAqCA,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Authors from './components/Authors'\r\nimport Books from './components/Books'\r\nimport NewBook from './components/NewBook'\r\nimport { useQuery, useMutation } from 'react-apollo'\r\nimport { gql } from 'apollo-boost'\r\n\r\nconst ALL_AUTHORS = gql`\r\n{\r\n  allAuthors{\r\n    name\r\n    born\r\n    bookCount\r\n  }\r\n}\r\n`\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('authors')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const authors = useQuery(ALL_AUTHORS)\r\n\r\n  const handleError = (error) => {\r\n    setErrorMessage(error.graphQLErrors[0].message)\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 10000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setPage('authors')}>authors</button>\r\n        <button onClick={() => setPage('books')}>books</button>\r\n        <button onClick={() => setPage('add')}>add book</button>\r\n      </div>\r\n\r\n      <Authors\r\n        authors = {authors}\r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        show={page === 'books'}\r\n      />\r\n\r\n      <NewBook\r\n        show={page === 'add'}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}