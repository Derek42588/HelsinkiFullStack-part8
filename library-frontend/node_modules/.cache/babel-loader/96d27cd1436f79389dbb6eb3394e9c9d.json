{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport LoginForm from './components/LoginForm';\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst ALL_AUTHORS = gql`\n{\n  allAuthors{\n    name\n    born\n    bookCount\n  }\n}\n`;\nconst ALL_BOOKS = gql`\n{\n  allBooks {\n    title\n    author {\n      name\n      born\n    }\n    published\n    genres\n  }\n}\n`;\nconst CREATE_BOOK = gql`\n  mutation createBook($title: String!, $publishedInt: Int!, $author: String!, $genres: [String!]!) {\n    addBook(\n      title: $title,\n      published: $publishedInt,\n      author: $author,\n      genres: $genres\n    ) {\n      title\n      published\n      id\n      author {\n        name\n        born\n      }\n      genres\n    }\n  }\n`;\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password){\n      value\n    }\n\n  }\n`;\nconst EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born) {\n      name\n      born\n      id\n      bookCount\n    }\n  }\n`;\n\nconst App = () => {\n  const _useState = useState('authors'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        token = _useState6[0],\n        setToken = _useState6[1];\n\n  const authors = useQuery(ALL_AUTHORS);\n  const books = useQuery(ALL_BOOKS);\n  const client = useApolloClient();\n\n  const handleError = error => {\n    setErrorMessage(error.graphQLErrors[0].message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  const errorNotification = () => errorMessage && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, errorMessage);\n\n  const _useMutation = useMutation(CREATE_BOOK, {\n    onError: handleError,\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }, {\n      query: ALL_BOOKS\n    }]\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        addBook = _useMutation2[0];\n\n  const _useMutation3 = useMutation(LOGIN, {\n    onError: handleError,\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }, {\n      query: ALL_BOOKS\n    }]\n  }),\n        _useMutation4 = _slicedToArray(_useMutation3, 1),\n        loginUser = _useMutation4[0];\n\n  const _useMutation5 = useMutation(EDIT_AUTHOR, {\n    onError: handleError,\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }, {\n      query: ALL_BOOKS\n    }]\n  }),\n        _useMutation6 = _slicedToArray(_useMutation5, 1),\n        editAuthor = _useMutation6[0];\n\n  if (!token) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => setPage('authors'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"authors\"), React.createElement(\"button\", {\n      onClick: () => setPage('books'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"button\", {\n      onClick: () => setPage('login'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"login\")), errorNotification(), React.createElement(Authors, {\n      authors: authors,\n      editAuthor: editAuthor,\n      show: page === 'authors',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Books, {\n      books: books,\n      show: page === 'books',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      login: loginUser,\n      setToken: token => setToken(token),\n      show: page === 'login',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"add book\"), React.createElement(\"button\", {\n    onClick: () => setPage('login'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"login\")), errorMessage && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, errorMessage), React.createElement(Authors, {\n    authors: authors,\n    editAuthor: editAuthor,\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Books, {\n    books: books,\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    addBook: addBook,\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    login: loginUser,\n    setToken: token => setToken(token),\n    show: page === 'login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","LoginForm","useQuery","useMutation","useApolloClient","gql","ALL_AUTHORS","ALL_BOOKS","CREATE_BOOK","LOGIN","EDIT_AUTHOR","App","page","setPage","errorMessage","setErrorMessage","token","setToken","authors","books","client","handleError","error","graphQLErrors","message","setTimeout","logout","localStorage","clear","resetStore","errorNotification","color","onError","refetchQueries","query","addBook","loginUser","editAuthor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Authors from './components/Authors'\r\nimport Books from './components/Books'\r\nimport NewBook from './components/NewBook'\r\nimport LoginForm from './components/LoginForm'\r\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo'\r\nimport { gql } from 'apollo-boost'\r\n\r\nconst ALL_AUTHORS = gql`\r\n{\r\n  allAuthors{\r\n    name\r\n    born\r\n    bookCount\r\n  }\r\n}\r\n`\r\n\r\nconst ALL_BOOKS = gql`\r\n{\r\n  allBooks {\r\n    title\r\n    author {\r\n      name\r\n      born\r\n    }\r\n    published\r\n    genres\r\n  }\r\n}\r\n`\r\n\r\nconst CREATE_BOOK = gql`\r\n  mutation createBook($title: String!, $publishedInt: Int!, $author: String!, $genres: [String!]!) {\r\n    addBook(\r\n      title: $title,\r\n      published: $publishedInt,\r\n      author: $author,\r\n      genres: $genres\r\n    ) {\r\n      title\r\n      published\r\n      id\r\n      author {\r\n        name\r\n        born\r\n      }\r\n      genres\r\n    }\r\n  }\r\n`\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!){\r\n    login(username: $username, password: $password){\r\n      value\r\n    }\r\n\r\n  }\r\n`\r\n\r\nconst EDIT_AUTHOR = gql`\r\n  mutation editAuthor($name: String!, $born: Int!) {\r\n    editAuthor(name: $name, setBornTo: $born) {\r\n      name\r\n      born\r\n      id\r\n      bookCount\r\n    }\r\n  }\r\n`\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('authors')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [token, setToken] = useState(null)\r\n  const authors = useQuery(ALL_AUTHORS)\r\n  const books = useQuery(ALL_BOOKS)\r\n\r\n  const client = useApolloClient()\r\n\r\n  const handleError = (error) => {\r\n    setErrorMessage(error.graphQLErrors[0].message)\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 10000)\r\n  }\r\n\r\n  const logout = () => {\r\n    setToken(null)\r\n    localStorage.clear()\r\n    client.resetStore()\r\n  }\r\n\r\n\r\n\r\n  const errorNotification = () => errorMessage &&\r\n  <div style={{ color: 'red' }}>\r\n    {errorMessage}\r\n  </div>\r\n\r\n  const [addBook] = useMutation(CREATE_BOOK, {\r\n    onError: handleError,\r\n    refetchQueries: [{ query: ALL_AUTHORS}, {query: ALL_BOOKS}]\r\n  })\r\n\r\n  const [loginUser] = useMutation(LOGIN, {\r\n    onError: handleError,\r\n    refetchQueries: [{ query: ALL_AUTHORS}, {query: ALL_BOOKS}]\r\n  })\r\n\r\n  const [editAuthor] = useMutation(EDIT_AUTHOR, {\r\n    onError: handleError,\r\n    refetchQueries: [{ query: ALL_AUTHORS}, {query: ALL_BOOKS}]\r\n\r\n  })\r\n\r\n    if (!token) {\r\n    return ( \r\n      <div>\r\n        <div>\r\n        <button onClick={() => setPage('authors')}>authors</button>\r\n        <button onClick={() => setPage('books')}>books</button>\r\n        <button onClick={() => setPage('login')}>login</button>\r\n      </div>\r\n        {errorNotification()}\r\n\r\n      <Authors\r\n        authors = {authors}\r\n        editAuthor = { editAuthor } \r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        books = { books }\r\n        show= {page === 'books'}\r\n      />\r\n\r\n      <LoginForm \r\n          login = {loginUser}\r\n          setToken = {(token) => setToken(token)}\r\n          show={page === 'login'}\r\n\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setPage('authors')}>authors</button>\r\n        <button onClick={() => setPage('books')}>books</button>\r\n        <button onClick={() => setPage('add')}>add book</button>\r\n        <button onClick={() => setPage('login')}>login</button>\r\n      </div>\r\n\r\n      {errorMessage &&\r\n      <div style = {{color: 'red'}}>\r\n        {errorMessage}\r\n      </div>\r\n      }\r\n\r\n      <Authors\r\n        authors = {authors}\r\n        editAuthor = { editAuthor } \r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        books = { books }\r\n        show={page === 'books'}\r\n      />\r\n\r\n      <NewBook\r\n        addBook = { addBook } \r\n        show={page === 'add'}\r\n      />\r\n      <LoginForm\r\n        login = {loginUser}\r\n        setToken = {(token) => setToken(token)}\r\n        show = {page === 'login'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}