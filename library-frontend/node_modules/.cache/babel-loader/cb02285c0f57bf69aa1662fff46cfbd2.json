{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\components\\\\NewBook.js\";\nimport React, { useState } from 'react';\n\nconst NewBook = ({\n  show,\n  addBook,\n  refetchBooks\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuthor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        published = _useState6[0],\n        setPublished = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        genre = _useState8[0],\n        setGenre = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        genres = _useState10[0],\n        setGenres = _useState10[1];\n\n  if (!show) {\n    return null;\n  }\n\n  const submit = async e => {\n    e.preventDefault();\n    const publishedInt = Number(published);\n    await addBook({\n      variables: {\n        title,\n        publishedInt,\n        author,\n        genres\n      }\n    });\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n    refetchBooks();\n    refetchFilteredBooks();\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"published\", React.createElement(\"input\", {\n    type: \"number\",\n    value: published,\n    onChange: ({\n      target\n    }) => setPublished(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: genre,\n    onChange: ({\n      target\n    }) => setGenre(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addGenre,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"add genre\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"genres: \", genres.join(' ')), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"create book\")));\n};\n\nexport default NewBook;","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/components/NewBook.js"],"names":["React","useState","NewBook","show","addBook","refetchBooks","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","submit","e","preventDefault","publishedInt","Number","variables","refetchFilteredBooks","addGenre","concat","target","value","join"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst NewBook = ({ show, addBook, refetchBooks }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [published, setPublished] = useState('')\r\n  const [genre, setGenre] = useState('')\r\n  const [genres, setGenres] = useState([])\r\n\r\n  if (!show) {\r\n    return null\r\n  }\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    const publishedInt = Number(published)\r\n\r\n    await addBook({\r\n      variables: { title, publishedInt, author, genres }\r\n    })\r\n\r\n    setTitle('')\r\n    setPublished('')\r\n    setAuthor('')\r\n    setGenres([])\r\n    setGenre('')\r\n    refetchBooks()\r\n    refetchFilteredBooks()\r\n  }\r\n\r\n  const addGenre = () => {\r\n    setGenres(genres.concat(genre))\r\n    setGenre('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          title\r\n          <input\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          published\r\n          <input\r\n            type='number'\r\n            value={published}\r\n            onChange={({ target }) => setPublished(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            value={genre}\r\n            onChange={({ target }) => setGenre(target.value)}\r\n          />\r\n          <button onClick={addGenre} type=\"button\">add genre</button>\r\n        </div>\r\n        <div>\r\n          genres: {genres.join(' ')}\r\n        </div>\r\n        <button type='submit'>create book</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewBook"]},"metadata":{},"sourceType":"module"}