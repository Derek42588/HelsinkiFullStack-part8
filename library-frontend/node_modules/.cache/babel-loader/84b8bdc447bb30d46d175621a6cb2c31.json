{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\components\\\\Authors.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\n\nconst Authors = ({\n  authors,\n  show,\n  editAuthor\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bornString = _useState4[0],\n        setBornString = _useState4[1]; // if (authors.data === null) {\n  //   options = []\n  // } else if (authors.data === undefined) {\n  //   options = []\n  // } else {\n  //   authors.data.allAuthors.map(a => {\n  //     console.log(a)\n  //    return options.concat({value: a.name, label: a.name})\n  //   })\n  // }\n\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedOption = _useState6[0],\n        setSelectedOption = _useState6[1]; // const [options, setOptions] = useState([])\n\n\n  if (!show) {\n    return null;\n  }\n\n  if (authors.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"loading...\");\n  } // let newOptions = authors.data.allAuthors.map(a => a.name)\n  // console.log(newOptions)\n\n\n  const options = [{\n    value: 'chocolate',\n    label: 'Chocolate'\n  }, {\n    value: 'strawberry',\n    label: 'Strawberry'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }];\n\n  const submit = async e => {\n    e.preventDefault();\n    const born = Number(bornString);\n    await editAuthor({\n      variables: {\n        name,\n        born\n      }\n    });\n    setName('');\n    setBornString('');\n  };\n\n  const handleChange = selectedOption => {\n    setSelectedOption({\n      selectedOption\n    });\n    console.log(selectedOption);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"born\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"books\")), authors.data.allAuthors.map(a => React.createElement(\"tr\", {\n    key: a.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, a.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, a.born), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, a.bookCount))))), React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: {\n      label: selectedOption,\n      value: selectedOption\n    },\n    onChange: handleChange,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"name \", React.createElement(\"input\", {\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"born \", React.createElement(\"input\", {\n    value: bornString,\n    onChange: ({\n      target\n    }) => setBornString(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"change birthyear\")));\n};\n\nexport default Authors;","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/components/Authors.js"],"names":["React","useState","Select","Authors","authors","show","editAuthor","name","setName","bornString","setBornString","selectedOption","setSelectedOption","loading","options","value","label","submit","e","preventDefault","born","Number","variables","handleChange","console","log","data","allAuthors","map","a","bookCount","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Authors = ({ authors, show, editAuthor }) => {\r\n\r\n  const [name, setName] = useState('')\r\n  const [bornString, setBornString] = useState('')\r\n  // if (authors.data === null) {\r\n  //   options = []\r\n  // } else if (authors.data === undefined) {\r\n  //   options = []\r\n  // } else {\r\n  //   authors.data.allAuthors.map(a => {\r\n  //     console.log(a)\r\n  //    return options.concat({value: a.name, label: a.name})\r\n  //   })\r\n  // }\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null)\r\n  // const [options, setOptions] = useState([])\r\n\r\n\r\n\r\n\r\n\r\n  if (!show) {\r\n    return null\r\n  }\r\n  if (authors.loading) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  // let newOptions = authors.data.allAuthors.map(a => a.name)\r\n  // console.log(newOptions)\r\n  const options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n  ];\r\n  \r\n  \r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    const born = Number(bornString)\r\n    await editAuthor({\r\n      variables: {name, born }\r\n    })\r\n\r\n    setName('')\r\n    setBornString('')\r\n\r\n  }\r\n\r\n  const handleChange = selectedOption => {\r\n    setSelectedOption( { selectedOption })\r\n    console.log(selectedOption)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>authors</h2>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              born\r\n            </th>\r\n            <th>\r\n              books\r\n            </th>\r\n          </tr>\r\n          {authors.data.allAuthors.map(a =>\r\n            <tr key={a.name}>\r\n              <td>{a.name}</td>\r\n              <td>{a.born}</td>\r\n              <td>{a.bookCount}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      \r\n      <form onSubmit={submit}>\r\n      <Select \r\n        value={{label: selectedOption, value: selectedOption} }\r\n        onChange = {handleChange}\r\n        options = {options}\r\n      />\r\n          <div>\r\n            name <input\r\n              value={name}\r\n              onChange={({ target }) => setName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            born <input\r\n              value={bornString}\r\n              onChange={({ target }) => setBornString(target.value)}\r\n            />\r\n          </div>\r\n          <button type='submit'>change birthyear</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Authors"]},"metadata":{},"sourceType":"module"}