{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context';\nimport App from './App';\nimport { split } from 'apollo-link';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/graphql`,\n  options: {\n    reconnect: true\n  }\n});\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('libraryApp-user-token');\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: token ? `bearer ${token}` : null\n    })\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/index.js"],"names":["React","ReactDOM","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","App","split","WebSocketLink","getMainDefinition","wsLink","uri","options","reconnect","httpLink","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,MAAMC,MAAM,GAAG,IAAIF,aAAJ,CAAkB;AAC/BG,EAAAA,GAAG,EAAG,6BADyB;AAE/BC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,SAAS,EAAE;AAAb;AAFsB,CAAlB,CAAf;AAKA,MAAMC,QAAQ,GAAGX,cAAc,CAAC;AAC9BQ,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMI,QAAQ,GAAGV,UAAU,CAAC,CAACW,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,uBAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,oBACFA,OADE;AAELI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFtC;AADF,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIpB,YAAJ,CAAiB;AAC9BqB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBV,QAAhB,CADwB;AAE9BW,EAAAA,KAAK,EAAE,IAAIrB,aAAJ;AAFuB,CAAjB,CAAf;AAKAJ,QAAQ,CAAC0B,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIIK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from \"@apollo/react-hooks\"\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\nimport App from './App'\r\n\r\nimport { split } from 'apollo-link'\r\nimport { WebSocketLink } from 'apollo-link-ws'\r\nimport { getMainDefinition } from 'apollo-utilities'\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:4000/graphql`,\r\n  options: { reconnect: true }\r\n})\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:4000/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('libraryApp-user-token')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null,\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client} >\r\n    <App />\r\n  </ApolloProvider>\r\n  , document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}