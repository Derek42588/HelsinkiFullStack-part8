{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\components\\\\Books.js\";\nimport React, { useState } from 'react';\nimport { pipe, uniq, unnest, values, filter } from 'ramda';\n\nconst Books = ({\n  show,\n  books,\n  setGenreFilter,\n  fax\n}) => {\n  if (!show) {\n    return null;\n  }\n\n  if (books.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  if (fax.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const allGenres = books.data.allBooks.map(a => a.genres);\n  const uniqueGenres = pipe(values, unnest, uniq);\n  const uniques = uniqueGenres(allGenres);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"published\")), fax.data.allBooks.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, a.published))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, uniques.map(g => React.createElement(\"button\", {\n    key: g,\n    onClick: () => setGenreFilter({\n      g\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, g)), React.createElement(\"button\", {\n    onClick: () => setGenreFilter({\n      g: \"\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"all books\")));\n};\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/components/Books.js"],"names":["React","useState","pipe","uniq","unnest","values","filter","Books","show","books","setGenreFilter","fax","loading","allGenres","data","allBooks","map","a","genres","uniqueGenres","uniques","title","author","name","published","g"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,OAAlD;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAAD,KAA0C;AAEtD,MAAI,CAACH,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,CAACG,OAAV,EAAmB;AACjB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAID,GAAG,CAACC,OAAR,EAAiB;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,QAAMC,SAAS,GAAGJ,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBC,GAApB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,MAA/B,CAAlB;AAEA,QAAMC,YAAY,GAAGjB,IAAI,CACvBG,MADuB,EAEvBD,MAFuB,EAGvBD,IAHuB,CAAzB;AAMA,QAAMiB,OAAO,GAAID,YAAY,CAACN,SAAD,CAA7B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGF,GAAG,CAACG,IAAJ,CAASC,QAAT,CAAkBC,GAAlB,CAAsBC,CAAC,IACtB;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACI,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,CAAC,CAACI,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,CAAC,CAACK,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,CAAC,CAACO,SAAP,CAHF,CADD,CAVH,CADF,CAHF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,OAAO,CAACJ,GAAR,CAAYS,CAAC,IACZ;AAAQ,IAAA,GAAG,EAAIA,CAAf;AACA,IAAA,OAAO,EAAE,MAAMf,cAAc,CAAC;AAACe,MAAAA;AAAD,KAAD,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACqCA,CADrC,CADD,CADD,EAME;AAAQ,IAAA,OAAO,EAAI,MAAMf,cAAc,CAAC;AAACe,MAAAA,CAAC,EAAE;AAAJ,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAvBF,CADF;AAkCD,CA1DD;;AA4DA,eAAelB,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport {pipe, uniq, unnest, values, filter } from 'ramda'\r\n\r\nconst Books = ({ show, books, setGenreFilter, fax }) => {\r\n\r\n  if (!show) {\r\n    return null\r\n  }\r\n\r\n  if (books.loading) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  if (fax.loading) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  const allGenres = books.data.allBooks.map(a => a.genres)\r\n\r\n  const uniqueGenres = pipe(\r\n    values,\r\n    unnest,\r\n    uniq\r\n  )\r\n\r\n  const uniques = (uniqueGenres(allGenres))\r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {fax.data.allBooks.map(a => \r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n      {uniques.map(g => \r\n        <button key = {g} \r\n        onClick={() => setGenreFilter({g})}>{g}</button>\r\n          )\r\n        }\r\n        <button onClick = {() => setGenreFilter({g: \"\"})}>all books</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Books"]},"metadata":{},"sourceType":"module"}