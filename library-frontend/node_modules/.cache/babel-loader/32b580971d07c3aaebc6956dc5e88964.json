{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\webdev\\\\HelsinkiFullStack\\\\part8\\\\library-frontend\\\\src\\\\components\\\\Books.js\";\nimport React from 'react';\nimport { pipe, uniq, unnest, values } from 'ramda';\n\nconst Books = ({\n  show,\n  books,\n  setGenreFilter,\n  fax,\n  filter,\n  user,\n  makeFavorite\n}) => {\n  if (!show) {\n    return null;\n  }\n\n  if (books.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  if (fax.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const allGenres = books.data.allBooks.map(a => a.genres);\n  const uniqueGenres = pipe(values, unnest, uniq);\n  const uniques = uniqueGenres(allGenres);\n\n  const submit = async e => {\n    e.preventDefault();\n    await makeFavorite({\n      variables: {\n        filter\n      }\n    });\n  };\n\n  const userData = () => {\n    if (user.data.me === null || user.data.me.favorite === null) {\n      if (filter === \"\") {\n        return null;\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Books in genre \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, filter));\n      }\n    } else {\n      if (filter === \"\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, user.data.me.username, \"'s current favorite genre: \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, user.data.me.favorite));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, user.data.me.username, \"'s current favorite genre: \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, user.data.me.favorite)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Books in genre \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, filter), user.data.me.favorite === filter ? null : React.createElement(\"button\", {\n          onClick: () => submit(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"make favorite\")));\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"books\"), userData(), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"published\")), fax.data.allBooks.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, a.published))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, uniques.map(g => React.createElement(\"button\", {\n    key: g,\n    onClick: () => setGenreFilter({\n      g\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, g)), React.createElement(\"button\", {\n    onClick: () => setGenreFilter({\n      g: \"\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"all books\")));\n};\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/derek/webdev/HelsinkiFullStack/part8/library-frontend/src/components/Books.js"],"names":["React","pipe","uniq","unnest","values","Books","show","books","setGenreFilter","fax","filter","user","makeFavorite","loading","allGenres","data","allBooks","map","a","genres","uniqueGenres","uniques","submit","e","preventDefault","variables","userData","me","favorite","username","title","author","name","published","g"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {pipe, uniq, unnest, values } from 'ramda'\r\n\r\nconst Books = ({ show, books, setGenreFilter, fax, filter, user, makeFavorite }) => {\r\n\r\n  if (!show) {\r\n    return null\r\n  }\r\n\r\n  if (books.loading) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  if (fax.loading) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  const allGenres = books.data.allBooks.map(a => a.genres)\r\n\r\n  const uniqueGenres = pipe(\r\n    values,\r\n    unnest,\r\n    uniq\r\n  )\r\n\r\n  const uniques = (uniqueGenres(allGenres))\r\n  \r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    await makeFavorite({\r\n      variables: { filter }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const userData = () => {\r\n    if ((user.data.me === null) || user.data.me.favorite === null ) {\r\n      if (filter === \"\") {\r\n        return null\r\n      } else {\r\n        return (\r\n          <div>\r\n             Books in genre <strong>{filter}</strong>\r\n          </div>\r\n        )\r\n      }\r\n    } else {\r\n      if (filter === \"\") {\r\n        return (\r\n            <div>\r\n              {user.data.me.username}'s current favorite genre: <strong>{user.data.me.favorite}</strong>\r\n            </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div>\r\n            <div>\r\n              {user.data.me.username}'s current favorite genre: <strong>{user.data.me.favorite}</strong>\r\n            </div>\r\n            <div>\r\n              Books in genre <strong>{filter}</strong>\r\n              {user.data.me.favorite === filter ?\r\n              null:\r\n              <button onClick={() => submit()}>make favorite</button>\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n      {userData()}\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {fax.data.allBooks.map(a => \r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n      {uniques.map(g => \r\n        <button key = {g} \r\n        onClick={() => setGenreFilter({g})}>{g}</button>\r\n          )\r\n        }\r\n        <button onClick = {() => setGenreFilter({g: \"\"})}>all books</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Books"]},"metadata":{},"sourceType":"module"}